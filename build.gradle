plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

group = 'dev.crius'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.triumphteam.dev/snapshots/' }
    maven { url 'https://repo.bg-software.com/repository/api/' }
    maven { url 'https://repo.codemc.io/repository/maven-public/' }
    maven { url 'https://repo.rosewooddev.io/repository/public/' }
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'

    compileOnly 'com.gmail.filoghost.holographicdisplays:holographicdisplays-api:2.4.9'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.5.1'

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'org.black_ixx:playerpoints:3.2.4'

    compileOnly 'com.github.pablo67340:GUIShop:8.0-PRE'
    compileOnly "com.github.brcdev-minecraft:shopgui-api:2.4.0"

    compileOnly 'com.bgsoftware:SuperiorSkyblockAPI:1.11.0'
    compileOnly 'world.bentobox:bentobox:1.20.0-SNAPSHOT'

    implementation "dev.triumphteam:triumph-cmd-bukkit:2.0.0-SNAPSHOT"
    implementation ("dev.triumphteam:triumph-gui:3.1.3") { exclude group: "com.google.code.gson" }

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    dependsOn(jar)

    archiveFileName = "${archiveBaseName.get()} v${archiveVersion.get()}.jar"

    relocate 'dev.triumphteam', 'dev.crius.dropcollector.thirdparty.dev.triumphteam'

    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]

}

build {
    dependsOn shadowJar
}